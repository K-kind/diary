-- Create tables
create table public.diaries (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  content varchar(4000) not null,
  date date not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);
create index on public.diaries (user_id, date);

-- Extensions and triggers
create extension if not exists moddatetime schema extensions;

create trigger handle_diary_updated_at before update on public.diaries
  for each row execute procedure moddatetime (updated_at);

-- Secure the tables
alter table public.diaries enable row level security;

create policy "Allow all access to owner" on public.diaries
  for all to authenticated using (
    auth.uid() = user_id
  );
